name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 下载代码仓库
      - uses: actions/checkout@v2

      # 使用 action 库，安装 Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.0

      # 安装依赖并构建
      - name: Install and Build
        run: |
          npm install -g pnpm && \
          pnpm install --no-frozen-lockfile && \
          pnpm build

      # 使用ssh把文件同步到服务器
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSHPWD }}
        # 设置 known_hosts
      - name: Set up known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Sync files to server
        run: |
          # 使用 rsync 同步 dist 目录、Dockerfile 和 nginx.config 文件
          rsync -avz --delete ./dist ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/blog/vue-admin/
          rsync -avz --delete ./Dockerfile ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/blog/vue-admin/
          rsync -avz --delete ./nginx.conf ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/blog/vue-admin/

      - name: 构建 Docker 镜像
        run: |
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'docker build -t vue-admin-app:latest /home/blog/vue-admin/'

      - name: 部署 Docker 容器
        run: |
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
            # 确保网络存在，如果不存在则创建
            docker network create app_common-network 2>/dev/null || true
            
            # 停止并删除旧容器
            docker stop vue-admin-app || true
            docker rm vue-admin-app || true
            
            # 运行新容器
            docker run -d --name vue-admin-app \
              -p 8080:8080 \
              --network=app_common-network \
              vue-admin-app:latest
          EOF
